# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        go-version: [ '1.25' ]
    runs-on: "${{ matrix.os }}"
    steps:

    # https://github.com/actions/checkout
    - uses: actions/checkout@v5

    # https://github.com/actions/setup-go
    - name: set up go
      uses: actions/setup-go@v5
      with:
        go-version: "${{ matrix.go-version }}.x"
        check-latest: true
        cache: false

    # https://github.com/actions/cache
    - name: cache tools
      id: cache-tools
      uses: actions/cache@v4
      with:
        path: |
          .tools/
          ~/.cache/go-build
          ~/go/pkg
        key: ci-tools-${{ runner.os }}-${{ runner.arch }}-${{ matrix.go-version }}-${{ hashFiles('tools/go.mod', 'tools/tools.mk') }}
        restore-keys: |
          ci-tools-${{ runner.os }}-${{ runner.arch }}-${{ matrix.go-version }}

    - name: install tools
      run: make tools

    - name: info
      run: |
        make --version
        echo ""
        make env

    - name: shell files
      run: make ci-sh

    - name: go mod
      run: make ci-mod

    - name: fmt
      run: make ci-format

    - name: vet
      run: make vet

    - name: staticcheck
      run: make staticcheck

    - name: golangci-lint
      run: make golangci-lint

  test-cover:
    name: Test With Cover
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        go-version: [ '1.25' ]
    runs-on: "${{ matrix.os }}"
    steps:

    # https://github.com/actions/checkout
    - uses: actions/checkout@v5

    # https://github.com/actions/setup-go
    - name: set up go
      uses: actions/setup-go@v5
      with:
        go-version: "${{ matrix.go-version }}.x"
        check-latest: true
        cache: false

    - name: test with cover
      run: |
        make --version
        echo ""
        make env
        echo ""
        go test -v -timeout 60s -race -coverprofile=coverage.txt -covermode=atomic ./...

    # https://github.com/codecov/codecov-action
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.txt

  tests:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        go-version: [ '1.23', '1.24', '1.25' ]
        exclude:
          # exclude the set that runs in the test-cover
          - os: 'ubuntu-latest'
            go-version: '1.25'
    runs-on: "${{ matrix.os }}"
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v5

      # https://github.com/actions/setup-go/
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # go-version-file: ./http/go.mod
          go-version: "${{ matrix.go-version }}.x"
          check-latest: true
          cache: false
          # cache: true
          # cache-dependency-path: ./http/go.sum

      - name: go test
        run: |
          go test -v -timeout 60s ./...
